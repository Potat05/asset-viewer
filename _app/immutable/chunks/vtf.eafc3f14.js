var U=Object.defineProperty;var p=(n,t,a)=>t in n?U(n,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[t]=a;var m=(n,t,a)=>(p(n,typeof t!="symbol"?t+"":t,a),a);import{f,a as I}from"./2.1e08a865.js";import{V as b}from"./vtf.116428a1.js";import{I as y}from"./ImageUtils.e16e1161.js";import{I as E}from"./ImageView.5dfee33b.js";function D(n){const t=new DataView(n),a=(e,s=!1)=>{if(s==!1)throw new Error("Catastrophic error.");return t.getUint8(e+0)|t.getUint16(e+1,!0)<<8},r=e=>{const s=t.getUint32(e+0,!0),c=t.getUint32(e+4,!0);if(s==1179011410&&e==8)throw new Error("extractImageDataChunkFromWEBP: First chunk MUST be riff chunk.");switch(e+=8,s){case 1179011410:{if(c!=n.byteLength-8)throw new Error("extractImageDataChunkFromWEBP: Data length and riff length do not match.");const d=t.getUint32(e+0,!0);e+=4;let g=[];for(;e<t.byteLength;){const w=r(e);e+=8+w.length,e+=e%2,g.push(w)}return{type:s,length:c,riffType:d,chunks:g}}case 1480085590:{if(c!=10)throw new Error("extractImageDataChunkFromWEBP: VP8X chunk must be length 10.");return{type:s,length:c,flags:t.getUint32(e+0,!0),width:a(e+4,!0)+1,height:a(e+7,!0)+1}}case 540561494:case 1278758998:return{type:s,length:c,data:t.buffer.slice(e-8,e+c+8)};case 1296649793:{if(c!=6)throw new Error("extractImageDataChunkFromWEBP: ANIM chunk must be length 6.");return{type:s,length:c,backgroundColor:t.getUint32(e+0,!0),loopCount:t.getUint16(e+4,!0)}}case 1179471425:return{type:s,length:c,x:a(e+0,!0)*2,y:a(e+3,!0)*2,width:a(e+6,!0)+1,height:a(e+9,!0)+1,duration:a(e+12,!0),flags:t.getUint8(e+15),chunk:function(){const d=r(e+16);return e+=e%2,d}()};default:return{type:s,length:c,data:t.buffer.slice(e,e+c)}}},i=r(0);if(i.type!=1179011410)throw new Error("extractImageDataChunkFromWEBP: Data is not RIFF.");if(i.riffType!=1346520407)throw new Error("extractImageDataChunkFromWEBP: RIFF is not WEBP.");let o,h,u;for(const e of i.chunks)if(e.type==1480085590)o=e.width,h=e.height;else if(e.type==540561494||e.type==1278758998)u=e.data;else if(e.type==1179471425){const s=e.chunk;(s.type==540561494||s.type==1278758998)&&(u=s.data)}if(o===void 0||h===void 0||u===void 0)throw new Error("extractImageDataChunkFromWEBP: Could not find webp image data.");return{data:u,width:o,height:h}}var l;(n=>{function t(r){return btoa(new Uint8Array(r).reduce((i,o)=>i+String.fromCharCode(o),""))}n.encode=t;function a(r){return Uint8Array.from(atob(r),i=>i.charCodeAt(0)).buffer}n.decode=a})(l||(l={}));function v(n){return!(!n.complete||n.naturalWidth===0)}function F(n,t={}){t.quality??(t.quality=1);let a;if(n instanceof HTMLCanvasElement)a=n.toDataURL("image/webp",t.quality);else if(n instanceof ImageData){const r=document.createElement("canvas");r.width=n.width,r.height=n.height;const i=r.getContext("2d");if(i===null)throw new Error("ImageToWebp: Canvas context 2d not supported on browser or machine.");i.putImageData(n,0,0),a=r.toDataURL("image/webp",t.quality)}else if(n instanceof HTMLImageElement){if(!v(n))throw new Error("ImageToWebp: Image is not loaded.");const r=document.createElement("canvas");r.width=n.width,r.height=n.height;const i=r.getContext("2d");if(i===null)throw new Error("ImageToWebp: Canvas context 2d not supported on browser or machine.");i.drawImage(n,0,0),a=r.toDataURL("image/webp",t.quality)}else throw new Error("ImageToWebp: Invalid image type.");return a=a.slice(23),l.decode(a)}class x{constructor(t={}){m(this,"defaultFrameDurationMs");m(this,"defaultQuality");m(this,"canvasWidth");m(this,"canvasHeight");m(this,"frames",[]);this.defaultFrameDurationMs=t.defaultFrameDurationMs,this.defaultQuality=t.defaultQuality??1,this.canvasWidth=t.canvasWidth,this.canvasHeight=t.canvasHeight}addFrame(t,a={}){const r=a.frameDuration??this.defaultFrameDurationMs;if(r===void 0)throw new Error("WebpAnimationBuilder.addFrame: Did not specify a frame duration.");const i=a.quality??this.defaultQuality,o=F(t,{quality:i});this.frames.push({image:D(o),duration:r,x:a.x??0,y:a.y??0})}estimateOutputSize(){return this.frames.reduce((t,a)=>t+a.image.data.byteLength+24,0)+128}generateAnimation(){if(this.frames.length==0)throw new Error("WebpAnimationBuilder.generateAnimations: Builder has no frames.");const t=this.canvasWidth??this.frames[0].image.width,a=this.canvasHeight??this.frames[0].image.height;let r=new DataView(new ArrayBuffer(this.estimateOutputSize())),i=0;const o=(u,e,s=!1)=>{if(s===!1)throw new Error("Catastrophic error.");e=~~e,r.setUint8(u+0,e>>0),r.setUint16(u+1,e>>8,!0)};r.setUint32(0,1179011410,!0);const h=u=>r.setUint32(4,u,!0);r.setUint32(8,1346520407,!0),r.setUint32(12,1480085590,!0),r.setUint32(16,10,!0),r.setUint32(20,18,!0),o(24,t-1,!0),o(27,a-1,!0),r.setUint32(30,1296649793,!0),r.setUint32(34,6,!0),r.setUint32(38,0,!0),r.setUint16(42,0,!0),i=44;for(const u of this.frames){if(u.x<0||u.x+u.image.width>t||u.y<0||u.y+u.image.height>a)throw new Error("WebpAnimationBuilder.generateAnimation: Frame is outside of builder canvas!");const e=i;r.setUint32(i+0,1179471425,!0);const s=i+4,c=g=>r.setUint32(s,g,!0);o(i+8,u.x/2,!0),o(i+11,u.y/2,!0),o(i+14,u.image.width-1,!0),o(i+17,u.image.height-1,!0),o(i+20,u.duration,!0),r.setUint8(i+23,3),i+=24,new Uint8Array(r.buffer).set(new Uint8Array(u.image.data),i),i+=u.image.data.byteLength,i+=i%2,c(i-e-8)}return h(i-8),r.buffer.slice(0,i)}generateAnimationURL(){const t=this.generateAnimation();return`data:image/webp;base64,${l.encode(t)}`}}function W(n,t=0){if(n.frames==1){const a=n.getTexture(t);return y.imgData2url(a.getImageData())}else{const[a,r]=n.getSize(t),i=new x({canvasWidth:a,canvasHeight:r,defaultFrameDurationMs:1e3/7});for(let o=0;o<n.frames;o++){const h=n.getTexture(t,o);i.addFrame(h.getImageData())}return i.generateAnimationURL()}}const L={namespace:"source-engine.vtf",priority:2,createViewer:async(n,t)=>{if(n.type==f.File){const a=await n.blob(),r=new b(await a.arrayBuffer());new E({target:t,props:{src:W(r,0),size:a.size,title:n.name,alt:I.getPath(n)}})}else throw new Error("Tried to create vtf viewer with directory.")},getIcon:async n=>{if(n.type==f.File){const t=await b.getThumbnail(await n.blob(),16,16);if(t==null)return"/asset-viewer/bootstrap-icons/file-earmark-image.svg";const a=t.getImageData();return y.imgData2url(a)}return null}};export{L as default};
