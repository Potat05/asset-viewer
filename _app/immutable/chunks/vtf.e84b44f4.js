var H=Object.defineProperty;var S=(r,t,e)=>t in r?H(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var g=(r,t,e)=>(S(r,typeof t!="symbol"?t+"":t,e),e);import{D as L,N as p,f as I}from"./2.ec27719f.js";import{I as A}from"./ImageUtils.e27df48a.js";function y(r){return{r:(r&63488)>>8,g:(r&2016)>>3,b:(r&31)<<3,a:255}}function B(r,t,e){return{r:p.lerp(r.r,t.r,e),g:p.lerp(r.g,t.g,e),b:p.lerp(r.b,t.b,e),a:255}}function G(r,t,e,i,a){const c=new ImageData(t,e),u=Math.ceil(t/4),n=Math.ceil(e/4);for(let s=0;s<u;s++)for(let o=0;o<n;o++){const d=(s+o*u)*i,h=r.slice(d,d+i),l=a(h);for(let f=0;f<4;f++)for(let w=0;w<4;w++){const m=s*4+f,U=o*4+w;if(m>=t||U>=e)continue;const b=(m+U*t)*4,x=(f+w*4)*4;c.data[b+0]=l[x+0],c.data[b+1]=l[x+1],c.data[b+2]=l[x+2],c.data[b+3]=l[x+3]}}return c}function z(r,t,e,i){return G(r,t,e,8,a=>{const c=a[0]|a[1]<<8,u=a[2]|a[3]<<8,n=y(c),s=y(u),o=c>u?[n,s,B(n,s,1/3),B(n,s,2/3)]:[n,s,B(n,s,1/2),{r:0,g:0,b:0,a:i?0:255}],d=new Uint8ClampedArray(4*4*4);for(let h=0;h<16;h++){const l=a[4+(h>>2)]>>((h&3)<<1)&3,f=o[l];d[h*4+0]=f.r,d[h*4+1]=f.g,d[h*4+2]=f.b,d[h*4+3]=f.a}return d})}function v(r,t,e,i){return G(r,t,e,16,a=>{const c=new Uint8ClampedArray(64);if(i)for(let h=0;h<16;h++)c[h*4+3]=(a[h>>1]>>((h&1)<<2)&15)<<4;else{const h=a[0],l=a[1],f=h>l?[h,l,p.lerp(h,l,1/7),p.lerp(h,l,2/7),p.lerp(h,l,3/7),p.lerp(h,l,4/7),p.lerp(h,l,5/7),p.lerp(h,l,6/7)]:[h,l,p.lerp(h,l,1/5),p.lerp(h,l,2/5),p.lerp(h,l,3/5),p.lerp(h,l,4/5),0,255];let w=a[2]|a[3]<<8|a[4]<<16;for(let m=0;m<8;m++,w>>=3)c[m*4+3]=f[w&7];w=a[5]|a[6]<<8|a[7]<<16;for(let m=8;m<16;m++,w>>=3)c[m*4+3]=f[w&7]}const u=a[8]|a[9]<<8,n=a[10]|a[11]<<8,s=y(u),o=y(n),d=u>n?[s,o,B(s,o,1/3),B(s,o,2/3)]:[s,o,B(s,o,1/2),{r:0,g:0,b:0}];for(let h=0;h<16;h++){const l=a[12+(h>>2)]>>((h&3)<<1)&3,f=d[l];c[h*4+0]=f.r,c[h*4+1]=f.g,c[h*4+2]=f.b}return c})}class D{constructor(t,e,i,a){g(this,"format");g(this,"width");g(this,"height");g(this,"data");this.format=t,this.width=e,this.height=i,this.data=new Uint8Array(a)}static getTextureSize(t,e,i){function a(c){return Math.ceil(c/4)*4}switch(t){case-1:return 0;case 13:case 20:return a(e)*a(i)/2;case 14:case 15:return a(e)*a(i);case 8:case 5:case 7:return e*i;case 17:case 18:case 19:case 21:case 6:case 4:case 22:return e*i*2;case 3:case 10:case 2:case 9:return e*i*3;case 1:case 11:case 12:case 16:case 0:case 26:case 23:return e*i*4;case 25:case 24:return e*i*8;default:throw new Error(`Unknown texture format. ${t}`)}}getImageData(){switch(this.format){case 0:return new ImageData(new Uint8ClampedArray(this.data),this.width,this.height);case 1:{const t=new ImageData(this.width,this.height);for(let e=0;e<this.width*this.height;e++)t.data[e*4+0]=this.data[e*4+3],t.data[e*4+1]=this.data[e*4+2],t.data[e*4+2]=this.data[e*4+1],t.data[e*4+3]=this.data[e*4+0];return t}case 2:{const t=new ImageData(this.width,this.height);for(let e=0;e<this.width*this.height;e++)t.data[e*4+0]=this.data[e*3+0],t.data[e*4+1]=this.data[e*3+1],t.data[e*4+2]=this.data[e*3+2],t.data[e*4+3]=255;return t}case 3:{const t=new ImageData(this.width,this.height);for(let e=0;e<this.width*this.height;e++)t.data[e*4+0]=this.data[e*3+3],t.data[e*4+1]=this.data[e*3+2],t.data[e*4+2]=this.data[e*3+1],t.data[e*4+3]=255;return t}case 4:{const t=new Uint16Array(this.data.buffer),e=new ImageData(this.width,this.height);for(let i=0;i<this.width*this.height;i++){const a=y(t[i]);e.data[i*4+0]=a.r,e.data[i*4+1]=a.g,e.data[i*4+2]=a.b,e.data[i*4+3]=255}return e}case 5:{const t=new ImageData(this.width,this.height);for(let e=0;e<this.width*this.height;e++)t.data[e*4+0]=this.data[e],t.data[e*4+1]=this.data[e],t.data[e*4+2]=this.data[e],t.data[e*4+3]=255;return t}case 12:{const t=new ImageData(this.width,this.height);for(let e=0;e<this.width*this.height;e++)t.data[e*4+0]=this.data[e*4+2],t.data[e*4+1]=this.data[e*4+1],t.data[e*4+2]=this.data[e*4+0],t.data[e*4+3]=this.data[e*4+3];return t}case 13:case 20:return z(this.data,this.width,this.height,!0);case 14:return v(this.data,this.width,this.height,!0);case 15:return v(this.data,this.width,this.height,!1);case 21:{const t=new Uint16Array(this.data.buffer),e=new ImageData(this.width,this.height);for(let i=0;i<this.width*this.height;i++){const a=t[i];e.data[i*4+0]=(a&31744)>>7,e.data[i*4+1]=(a&992)>>2,e.data[i*4+2]=(a&31)<<3,e.data[i*4+3]=a&32768?255:0}return e}default:throw new Error(`Unknown texture format. ${this.format}`)}}}var R=(r=>(r[r.NONE=-1]="NONE",r[r.RGBA8888=0]="RGBA8888",r[r.ABGR8888=1]="ABGR8888",r[r.RGB888=2]="RGB888",r[r.BGR888=3]="BGR888",r[r.RGB565=4]="RGB565",r[r.I8=5]="I8",r[r.IA88=6]="IA88",r[r.P8=7]="P8",r[r.A8=8]="A8",r[r.RGB888_BLUESCREEN=9]="RGB888_BLUESCREEN",r[r.BGR888_BLUESCREEN=10]="BGR888_BLUESCREEN",r[r.ARGB8888=11]="ARGB8888",r[r.BGRA8888=12]="BGRA8888",r[r.DXT1=13]="DXT1",r[r.DXT3=14]="DXT3",r[r.DXT5=15]="DXT5",r[r.BGRX8888=16]="BGRX8888",r[r.BGR565=17]="BGR565",r[r.BGRX5551=18]="BGRX5551",r[r.BGRA4444=19]="BGRA4444",r[r.DXT1_ONEBITALPHA=20]="DXT1_ONEBITALPHA",r[r.BGRA5551=21]="BGRA5551",r[r.UV88=22]="UV88",r[r.UVWQ8888=23]="UVWQ8888",r[r.RGBA16161616F=24]="RGBA16161616F",r[r.RGBA16161616=25]="RGBA16161616",r[r.UVLX8888=26]="UVLX8888",r))(R||{});class C extends L{readHeaderHead(){this.assertMagic("VTF\0");const t=this.readNumber("Uint32"),e=this.readNumber("Uint32");return{version:parseFloat(`${t}.${e}`),headerSize:this.readNumber("Uint32")}}readResource(){return{tag:this.readString(3,"ascii"),flags:this.readNumber("Uint8"),offset:this.readNumber("Uint32")}}readHeader(t){const e=this.readNumber("Uint16"),i=this.readNumber("Uint16"),a=this.readNumber("Uint32"),c=this.readNumber("Uint16"),u=this.readNumber("Int16");this.pointer+=4;const n={r:this.readNumber("Float32"),g:this.readNumber("Float32"),b:this.readNumber("Float32")};this.pointer+=4;const s=this.readNumber("Float32"),o=this.readNumber("Int32"),d=this.readNumber("Uint8"),h=this.readNumber("Int32"),l=this.readNumber("Uint8"),f=this.readNumber("Uint8"),w=a&16384?u==-1?7:6:1,m=t>=7.2?this.readNumber("Uint16"):1;let U=!1,b=[];if(t>=7.3){this.pointer+=3,U=!0;const x=this.readNumber("Uint32");this.pointer+=8,b=this.readArray(this.readResource,x)}return{width:e,height:i,flags:a,frames:c,firstFrame:u,reflectivity:n,bumpmapScale:s,format:o,mipmaps:d,lowresFormat:h,lowresWidth:l,lowresHeight:f,faces:w,slices:m,resourceFormat:U,resources:b}}readTexture(t,e,i){const a=this.readBuffer(D.getTextureSize(t,e,i));return new D(t,e,i,a)}}function N(r,t,e){return[r>>e,t>>e]}class W{constructor(t){g(this,"version");g(this,"format");g(this,"width");g(this,"height");g(this,"mipmaps");g(this,"frames");g(this,"faces");g(this,"slices",1);g(this,"textures");g(this,"firstFrame");g(this,"flags");g(this,"reflectivity");g(this,"bumpmapScale");g(this,"lowresFormat");g(this,"lowresWidth");g(this,"lowresHeight");g(this,"lowresTexture",null);const e=new C(t),i=e.readHeaderHead();this.version=i.version;const a=e.readHeader(this.version);this.width=a.width,this.height=a.height,this.flags=a.flags,this.frames=a.frames,this.firstFrame=a.firstFrame,this.reflectivity=a.reflectivity,this.bumpmapScale=a.bumpmapScale,this.format=a.format,this.mipmaps=a.mipmaps,this.lowresFormat=a.lowresFormat,this.lowresWidth=a.lowresWidth,this.lowresHeight=a.lowresHeight,this.faces=a.faces,this.slices=a.slices;const c=()=>{let n=[];for(let s=this.mipmaps-1;s>=0;s--){n[s]=[];for(let o=0;o<this.frames;o++){n[s][o]=[];for(let d=0;d<this.faces;d++){n[s][o][d]=[];for(let h=0;h<this.slices;h++){const[l,f]=this.getSize(s),w=e.readTexture(this.format,l,f);n[s][o][d][h]=w}}}}return n},u=()=>this.lowresWidth==0||this.lowresHeight==0||this.lowresFormat==-1?null:(this.lowresFormat!=13&&console.warn(`VTF lowres texture format ${R[this.lowresFormat]} is not ${R[13]}`),e.readTexture(this.lowresFormat,this.lowresWidth,this.lowresHeight));if(a.resourceFormat){const n=a.resources.find(o=>o.tag=="0\0\0");if(!n)throw new Error("VTF resource format has no high resolution texture.");e.pointer=n.offset,this.textures=c();const s=a.resources.find(o=>o.tag=="\0\0");s&&(e.pointer=s.offset,this.lowresTexture=u())}else e.pointer=i.headerSize,this.lowresTexture=u(),this.textures=c()}getSize(t){return N(this.width,this.height,t)}getTexture(t=0,e=0,i=0,a=0){return this.textures[t][e][i][a]}static async getThumbnail(t,e,i){var s;const a=new C;a.loadData(await t.slice(0,16).arrayBuffer());const c=a.readHeaderHead();a.loadData(await t.slice(0,c.headerSize).arrayBuffer(),a.pointer);const u=a.readHeader(c.version);let n=u.resourceFormat?((s=u.resources.find(o=>o.tag=="0\0\0"))==null?void 0:s.offset)??-1:c.headerSize+D.getTextureSize(u.lowresFormat,u.lowresWidth,u.lowresHeight);if(n==-1)throw new Error("VTF no highres texture.");for(let o=u.mipmaps-1;o>=0;o--)for(let d=0;d<u.frames;d++)for(let h=0;h<u.faces;h++)for(let l=0;l<u.slices;l++){const[f,w]=N(u.width,u.height,o),m=D.getTextureSize(u.format,f,w);if(f<e||w<i){n+=m;continue}return a.loadData(await t.slice(n,n+m).arrayBuffer()),a.readTexture(u.format,f,w)}return null}}function M(r){const t=new DataView(r),e=(s,o=!1)=>{if(o==!1)throw new Error("Catastrophic error.");return t.getUint8(s+0)|t.getUint16(s+1,!0)<<8},i=s=>{const o=t.getUint32(s+0,!0),d=t.getUint32(s+4,!0);if(o==1179011410&&s==8)throw new Error("extractImageDataChunkFromWEBP: First chunk MUST be riff chunk.");switch(s+=8,o){case 1179011410:{if(d!=r.byteLength-8)throw new Error("extractImageDataChunkFromWEBP: Data length and riff length do not match.");const h=t.getUint32(s+0,!0);s+=4;let l=[];for(;s<t.byteLength;){const f=i(s);s+=8+f.length,s+=s%2,l.push(f)}return{type:o,length:d,riffType:h,chunks:l}}case 1480085590:{if(d!=10)throw new Error("extractImageDataChunkFromWEBP: VP8X chunk must be length 10.");return{type:o,length:d,flags:t.getUint32(s+0,!0),width:e(s+4,!0)+1,height:e(s+7,!0)+1}}case 540561494:case 1278758998:return{type:o,length:d,data:t.buffer.slice(s-8,s+d+8)};case 1296649793:{if(d!=6)throw new Error("extractImageDataChunkFromWEBP: ANIM chunk must be length 6.");return{type:o,length:d,backgroundColor:t.getUint32(s+0,!0),loopCount:t.getUint16(s+4,!0)}}case 1179471425:return{type:o,length:d,x:e(s+0,!0)*2,y:e(s+3,!0)*2,width:e(s+6,!0)+1,height:e(s+9,!0)+1,duration:e(s+12,!0),flags:t.getUint8(s+15),chunk:function(){const h=i(s+16);return s+=s%2,h}()};default:return{type:o,length:d,data:t.buffer.slice(s,s+d)}}},a=i(0);if(a.type!=1179011410)throw new Error("extractImageDataChunkFromWEBP: Data is not RIFF.");if(a.riffType!=1346520407)throw new Error("extractImageDataChunkFromWEBP: RIFF is not WEBP.");let c,u,n;for(const s of a.chunks)if(s.type==1480085590)c=s.width,u=s.height;else if(s.type==540561494||s.type==1278758998)n=s.data;else if(s.type==1179471425){const o=s.chunk;(o.type==540561494||o.type==1278758998)&&(n=o.data)}if(c===void 0||u===void 0||n===void 0)throw new Error("extractImageDataChunkFromWEBP: Could not find webp image data.");return{data:n,width:c,height:u}}var E;(r=>{function t(i){return btoa(new Uint8Array(i).reduce((a,c)=>a+String.fromCharCode(c),""))}r.encode=t;function e(i){return Uint8Array.from(atob(i),a=>a.charCodeAt(0)).buffer}r.decode=e})(E||(E={}));function X(r){return!(!r.complete||r.naturalWidth===0)}function P(r,t={}){t.quality??(t.quality=1);let e;if(r instanceof HTMLCanvasElement)e=r.toDataURL("image/webp",t.quality);else if(r instanceof ImageData){const i=document.createElement("canvas");i.width=r.width,i.height=r.height;const a=i.getContext("2d");if(a===null)throw new Error("ImageToWebp: Canvas context 2d not supported on browser or machine.");a.putImageData(r,0,0),e=i.toDataURL("image/webp",t.quality)}else if(r instanceof HTMLImageElement){if(!X(r))throw new Error("ImageToWebp: Image is not loaded.");const i=document.createElement("canvas");i.width=r.width,i.height=r.height;const a=i.getContext("2d");if(a===null)throw new Error("ImageToWebp: Canvas context 2d not supported on browser or machine.");a.drawImage(r,0,0),e=i.toDataURL("image/webp",t.quality)}else throw new Error("ImageToWebp: Invalid image type.");return e=e.slice(23),E.decode(e)}class k{constructor(t={}){g(this,"defaultFrameDurationMs");g(this,"defaultQuality");g(this,"canvasWidth");g(this,"canvasHeight");g(this,"frames",[]);this.defaultFrameDurationMs=t.defaultFrameDurationMs,this.defaultQuality=t.defaultQuality??1,this.canvasWidth=t.canvasWidth,this.canvasHeight=t.canvasHeight}addFrame(t,e={}){const i=e.frameDuration??this.defaultFrameDurationMs;if(i===void 0)throw new Error("WebpAnimationBuilder.addFrame: Did not specify a frame duration.");const a=e.quality??this.defaultQuality,c=P(t,{quality:a});this.frames.push({image:M(c),duration:i,x:e.x??0,y:e.y??0})}estimateOutputSize(){return this.frames.reduce((t,e)=>t+e.image.data.byteLength+24,0)+128}generateAnimation(){if(this.frames.length==0)throw new Error("WebpAnimationBuilder.generateAnimations: Builder has no frames.");const t=this.canvasWidth??this.frames[0].image.width,e=this.canvasHeight??this.frames[0].image.height;let i=new DataView(new ArrayBuffer(this.estimateOutputSize())),a=0;const c=(n,s,o=!1)=>{if(o===!1)throw new Error("Catastrophic error.");s=~~s,i.setUint8(n+0,s>>0),i.setUint16(n+1,s>>8,!0)};i.setUint32(0,1179011410,!0);const u=n=>i.setUint32(4,n,!0);i.setUint32(8,1346520407,!0),i.setUint32(12,1480085590,!0),i.setUint32(16,10,!0),i.setUint32(20,18,!0),c(24,t-1,!0),c(27,e-1,!0),i.setUint32(30,1296649793,!0),i.setUint32(34,6,!0),i.setUint32(38,0,!0),i.setUint16(42,0,!0),a=44;for(const n of this.frames){if(n.x<0||n.x+n.image.width>t||n.y<0||n.y+n.image.height>e)throw new Error("WebpAnimationBuilder.generateAnimation: Frame is outside of builder canvas!");const s=a;i.setUint32(a+0,1179471425,!0);const o=a+4,d=l=>i.setUint32(o,l,!0);c(a+8,n.x/2,!0),c(a+11,n.y/2,!0),c(a+14,n.image.width-1,!0),c(a+17,n.image.height-1,!0),c(a+20,n.duration,!0),i.setUint8(a+23,3),a+=24,new Uint8Array(i.buffer).set(new Uint8Array(n.image.data),a),a+=n.image.data.byteLength,a+=a%2,d(a-s-8)}return u(a-8),i.buffer.slice(0,a)}generateAnimationURL(){const t=this.generateAnimation();return`data:image/webp;base64,${E.encode(t)}`}}const Q={namespace:"source-engine.vtf",priority:2,isValid:async r=>{if(r.type!=I.File||!r.name.includes(".vtf"))return!1;const t=await r.blob();return t.size==0?!0:await t.slice(0,4).text()=="VTF\0"},createViewer:async(r,t)=>{if(r.type==I.File){const e=new W(await r.buffer());for(let i=0;i<e.mipmaps;i++){const a=document.createElement("img");if(t.appendChild(a),e.frames==0){const c=e.getTexture(i);a.src=A.imgData2url(c.getImageData())}else{const[c,u]=e.getSize(i),n=new k({canvasWidth:c,canvasHeight:u,defaultFrameDurationMs:1e3/7});for(let s=0;s<e.frames;s++){const o=e.getTexture(i,s);n.addFrame(o.getImageData())}a.src=n.generateAnimationURL()}}}else throw new Error("Tried to create vtf viewer with directory.")},getIcon:async r=>{if(r.type==I.File){const t=await W.getThumbnail(await r.blob(),16,16);if(t==null)return"/asset-viewer/bootstrap-icons/file-earmark-image.svg";const e=t.getImageData();return A.imgData2url(e)}return null}};export{Q as default};
