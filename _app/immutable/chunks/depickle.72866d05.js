var u=Object.defineProperty;var I=(t,i,e)=>i in t?u(t,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[i]=e;var n=(t,i,e)=>(I(t,typeof i!="symbol"?i+"":i,e),e);import{D as b,N as U}from"./2.ec27719f.js";var T=(t=>(t[t.UNKNOWN=-1]="UNKNOWN",t[t.Protocol0=0]="Protocol0",t[t.Protocol1=1]="Protocol1",t[t.Protocol2=2]="Protocol2",t[t.Protocol3=3]="Protocol3",t[t.Protocol4=4]="Protocol4",t[t.Protocol5=5]="Protocol5",t))(T||{}),k=(t=>(t[t.UNKNOWN=-1]="UNKNOWN",t[t.MARK=40]="MARK",t[t.STOP=46]="STOP",t[t.POP=48]="POP",t[t.POP_MARK=49]="POP_MARK",t[t.DUP=50]="DUP",t[t.FLOAT=70]="FLOAT",t[t.INT=73]="INT",t[t.BININT=74]="BININT",t[t.BININT1=75]="BININT1",t[t.LONG=76]="LONG",t[t.BININT2=77]="BININT2",t[t.NONE=78]="NONE",t[t.PERSID=80]="PERSID",t[t.BINPERSID=81]="BINPERSID",t[t.REDUCE=82]="REDUCE",t[t.STRING=83]="STRING",t[t.BINSTRING=84]="BINSTRING",t[t.SHORT_BINSTRING=85]="SHORT_BINSTRING",t[t.UNICODE=86]="UNICODE",t[t.BINUNICODE=88]="BINUNICODE",t[t.APPEND=97]="APPEND",t[t.BUILD=98]="BUILD",t[t.GLOBAL=99]="GLOBAL",t[t.DICT=100]="DICT",t[t.EMPTY_DICT=125]="EMPTY_DICT",t[t.APPENDS=101]="APPENDS",t[t.GET=103]="GET",t[t.BINGET=104]="BINGET",t[t.INST=105]="INST",t[t.LONG_BINGET=106]="LONG_BINGET",t[t.LIST=108]="LIST",t[t.EMPTY_LIST=93]="EMPTY_LIST",t[t.OBJ=111]="OBJ",t[t.PUT=112]="PUT",t[t.BINPUT=113]="BINPUT",t[t.LONG_BINPUT=114]="LONG_BINPUT",t[t.SETITEM=115]="SETITEM",t[t.TUPLE=116]="TUPLE",t[t.EMPTY_TUPLE=41]="EMPTY_TUPLE",t[t.SETITEMS=117]="SETITEMS",t[t.BINFLOAT=71]="BINFLOAT",t[t.PROTO=128]="PROTO",t[t.NEWOBJ=129]="NEWOBJ",t[t.EXT1=130]="EXT1",t[t.EXT2=131]="EXT2",t[t.EXT4=132]="EXT4",t[t.TUPLE1=133]="TUPLE1",t[t.TUPLE2=134]="TUPLE2",t[t.TUPLE3=135]="TUPLE3",t[t.NEWTRUE=136]="NEWTRUE",t[t.NEWFALSE=137]="NEWFALSE",t[t.LONG1=138]="LONG1",t[t.LONG4=139]="LONG4",t[t.BINBYTES=66]="BINBYTES",t[t.SHORT_BINBYTES=67]="SHORT_BINBYTES",t[t.SHORT_BINUNICODE=140]="SHORT_BINUNICODE",t[t.BINUNICODE8=141]="BINUNICODE8",t[t.BINBYTES8=142]="BINBYTES8",t[t.EMPTY_SET=143]="EMPTY_SET",t[t.ADDITEMS=144]="ADDITEMS",t[t.FROZENSET=145]="FROZENSET",t[t.NEWOBJ_EX=146]="NEWOBJ_EX",t[t.STACK_GLOBAL=147]="STACK_GLOBAL",t[t.MEMOIZE=148]="MEMOIZE",t[t.FRAME=149]="FRAME",t[t.BYTEARRAY8=150]="BYTEARRAY8",t[t.NEXT_BUFFER=151]="NEXT_BUFFER",t[t.READONLY_BUFFER=152]="READONLY_BUFFER",t))(k||{});class B{constructor(i,...e){n(this,"module");n(this,"args");n(this,"state");this.module=i,this.args=e}}class l{constructor(i,e){n(this,"module");n(this,"name");this.module=i,this.name=e}make(...i){return new B(this,...i)}}const E=class E{constructor(){n(this,"stack",[])}append(i){this.stack.push(i)}pop(){return this.stack.pop()}get last(){return this.stack[this.stack.length-1]}set last(i){this.stack[this.stack.length-1]=i}popMark(){let i=[];for(var e=this.stack.length-1;e>=0;e--)if(this.stack[e]===E.MARK){this.pop();break}else i.unshift(this.pop());return i}};n(E,"MARK",Symbol("Mark"));let N=E;class c{constructor(){n(this,"memo",[])}get(i){return this.memo[i]}set(i,e){this.memo[e]=i}append(i){this.memo.push(i)}get lastMemo(){return this.memo[this.memo.length-1]}}class m extends b{constructor(e,s={}){super(e);n(this,"debug");n(this,"operTime",{});n(this,"downcastLongs");n(this,"protocol",-1);n(this,"stack",new N);n(this,"memo",new c);this.debug=s.debug??!1,this.downcastLongs=s.downcastLongs??!1}findClass(e,s){return new l(e,s)}readOperation(){const e=this.debug?performance.now():0;if(this.eof)throw new Error("Depickler.readOperation: Reached end of pickle data without STOP opcode.");const s=this.readNumber("Uint8");switch(s){case 46:break;case 128:{if(this.protocol=this.readNumber("Uint8"),!(this.protocol in T))throw new Error(`Depickler.readPicke: Unknown protocol. ${this.protocol}`);if(![2,3,4,5].includes(this.protocol))throw new Error(`Depickler.readPickle: Unsupported protocol. ${T[this.protocol]}`);break}case 149:{this.readBigNumber("BigUint64");break}case 125:{this.stack.append({});break}case 148:{this.memo.append(this.stack.last);break}case 40:{this.stack.append(N.MARK);break}case 140:{this.stack.append(this.readString(this.readNumber("Uint8"),"utf-8"));break}case 93:{this.stack.append([]);break}case 74:{this.stack.append(this.readNumber("Int32"));break}case 67:{const a=this.readNumber("Uint8"),r=new Uint8Array(this.readBuffer(a));this.stack.append(r);break}case 135:{this.stack.append([this.stack.pop(),this.stack.pop(),this.stack.pop()].reverse());break}case 97:{const a=this.stack.pop();this.stack.last.push(a);break}case 104:{const a=this.readNumber("Uint8");if(this.memo.get(a)===void 0)throw new Error(`Depickler.readPickle: Memo value not found at index ${a}`);this.stack.append(this.memo.get(a));break}case 117:{const a=this.stack.popMark();if(a.length%2!=0)throw new Error("Depickler.readPickle: Can not set an odd number of items.");const r=this.stack.last;for(let h=0;h<a.length;h+=2)r[a[h+0]]=a[h+1];break}case 77:{this.stack.append(this.readNumber("Uint16"));break}case 113:{const a=this.readNumber("Uint8");this.memo.set(this.stack.last,a);break}case 88:{const a=this.readNumber("Uint32");this.stack.append(this.readString(a,"utf-8"));break}case 138:{const a=this.readNumber("Uint8"),r=this.readBigCustomNumber(a,!0);this.stack.append(this.downcastLongs?Number(r):r);break}case 85:{const a=this.readNumber("Uint8");this.stack.append(this.readString(a,"utf-8"));break}case 114:{const a=this.readNumber("Uint32");this.memo.set(this.stack.last,a);break}case 99:{const a=this.readUntilNewline(),r=this.readUntilNewline();this.stack.append(this.findClass(a,r));break}case 41:{this.stack.append([]);break}case 129:{const a=this.stack.pop(),r=this.stack.pop();this.stack.append(r.make(...a));break}case 78:{this.stack.append(null);break}case 75:{this.stack.append(this.readNumber("Uint8"));break}case 116:{this.stack.append([...this.stack.popMark()].reverse());break}case 134:{this.stack.append([this.stack.pop(),this.stack.pop()].reverse());break}case 98:{const a=this.stack.pop(),r=this.stack.last;r.state=a;break}case 137:{this.stack.append(!1);break}case 136:{this.stack.append(!0);break}case 101:{const a=this.stack.popMark();this.stack.last.push(...a);break}case 133:{this.stack.append([this.stack.pop()]);break}case 106:{const a=this.readNumber("Uint32");if(this.memo.get(a)===void 0)throw new Error(`Depickler.readPickle: Memo value not found at index ${a}`);this.stack.append(this.memo.get(a));break}case 115:{const a=this.stack.pop(),r=this.stack.pop();this.stack.last[r]=a;break}case 82:{const a=this.stack.pop(),r=this.stack.last;r instanceof l?this.stack.last=r.make(...a):this.stack.last=r(...a);break}default:throw k[s]===void 0?new Error(`Depicker.readPickle: Unknown opcode. ${U.hex(s,1)}`):new Error(`Depicker.readPickle: Unimplemented opcode. ${k[s]}`)}if(this.debug){const a=performance.now()-e;this.operTime[s]=(this.operTime[s]??0)+a}return s}readPickle(){for(this.debug&&console.time("Depickle");this.readOperation()!=46;);if(this.debug){console.timeEnd("Depickle");const e=Object.fromEntries(Object.entries(this.operTime).map(a=>[k[parseInt(a[0])],a[1]])),s=Object.keys(e).reduce((a,r)=>Math.max(a,r.length),0);for(const[a,r]of Object.entries(e))console.log(`${a.padEnd(s," ")} with ${Math.round(r)}ms`)}return this.stack.stack}static depickle(e,s={}){return new m(e,s).readPickle()}readUntilNewline(){let e=this.pointer;for(;this.view.getUint8(e++)!=10;);const s=this.readBufferFast(e-this.pointer-1);return this.pointer++,new TextDecoder("ascii").decode(s)}}export{m as D};
