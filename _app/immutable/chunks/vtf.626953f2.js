var I=Object.defineProperty;var X=(s,e,t)=>e in s?I(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var f=(s,e,t)=>(X(s,typeof e!="symbol"?e+"":e,t),t);import{U as v,D as z,N as m}from"./2.d113004e.js";import{C as M,D as L,R as E,L as W,g as $,h as O,i as P,j,k as Q,l as H}from"./three.module.501e9167.js";function G(s){return{r:(s&63488)>>8,g:(s&2016)>>3,b:(s&31)<<3,a:255}}function A(s,e,t){return{r:m.lerp(s.r,e.r,t),g:m.lerp(s.g,e.g,t),b:m.lerp(s.b,e.b,t),a:255}}function C(s,e,t,a,r){const c=new ImageData(e,t),d=Math.ceil(e/4),l=Math.ceil(t/4);for(let h=0;h<d;h++)for(let n=0;n<l;n++){const g=(h+n*d)*a,i=s.slice(g,g+a),o=r(i);for(let u=0;u<4;u++)for(let w=0;w<4;w++){const p=h*4+u,B=n*4+w;if(p>=e||B>=t)continue;const R=(p+B*e)*4,x=(u+w*4)*4;c.data[R+0]=o[x+0],c.data[R+1]=o[x+1],c.data[R+2]=o[x+2],c.data[R+3]=o[x+3]}}return c}function q(s,e,t,a){return C(s,e,t,8,r=>{const c=r[0]|r[1]<<8,d=r[2]|r[3]<<8,l=G(c),h=G(d),n=c>d?[l,h,A(l,h,1/3),A(l,h,2/3)]:[l,h,A(l,h,1/2),{r:0,g:0,b:0,a:a?0:255}],g=new Uint8ClampedArray(4*4*4);for(let i=0;i<16;i++){const o=r[4+(i>>2)]>>((i&3)<<1)&3,u=n[o];g[i*4+0]=u.r,g[i*4+1]=u.g,g[i*4+2]=u.b,g[i*4+3]=u.a}return g})}function S(s,e,t,a){return C(s,e,t,16,r=>{const c=new Uint8ClampedArray(64);if(a)for(let i=0;i<16;i++)c[i*4+3]=(r[i>>1]>>((i&1)<<2)&15)<<4;else{const i=r[0],o=r[1],u=i>o?[i,o,m.lerp(i,o,1/7),m.lerp(i,o,2/7),m.lerp(i,o,3/7),m.lerp(i,o,4/7),m.lerp(i,o,5/7),m.lerp(i,o,6/7)]:[i,o,m.lerp(i,o,1/5),m.lerp(i,o,2/5),m.lerp(i,o,3/5),m.lerp(i,o,4/5),0,255];let w=r[2]|r[3]<<8|r[4]<<16;for(let p=0;p<8;p++,w>>=3)c[p*4+3]=u[w&7];w=r[5]|r[6]<<8|r[7]<<16;for(let p=8;p<16;p++,w>>=3)c[p*4+3]=u[w&7]}const d=r[8]|r[9]<<8,l=r[10]|r[11]<<8,h=G(d),n=G(l),g=d>l?[h,n,A(h,n,1/3),A(h,n,2/3)]:[h,n,A(h,n,1/2),{r:0,g:0,b:0}];for(let i=0;i<16;i++){const o=r[12+(i>>2)]>>((i&3)<<1)&3,u=g[o];c[i*4+0]=u.r,c[i*4+1]=u.g,c[i*4+2]=u.b}return c})}class U{constructor(e,t,a,r){f(this,"format");f(this,"width");f(this,"height");f(this,"data");this.format=e,this.width=t,this.height=a,this.data=new Uint8Array(r)}static getTextureSize(e,t,a){function r(c){return Math.ceil(c/4)*4}switch(e){case-1:return 0;case 13:case 20:return r(t)*r(a)/2;case 14:case 15:return r(t)*r(a);case 8:case 5:case 7:return t*a;case 17:case 18:case 19:case 21:case 6:case 4:case 22:return t*a*2;case 3:case 10:case 2:case 9:return t*a*3;case 1:case 11:case 12:case 16:case 0:case 26:case 23:return t*a*4;case 25:case 24:return t*a*8;default:throw new Error(`Unknown texture format. ${e}`)}}getImageData(){switch(this.format){case 0:return new ImageData(new Uint8ClampedArray(this.data),this.width,this.height);case 1:{const e=new ImageData(this.width,this.height);for(let t=0;t<this.width*this.height;t++)e.data[t*4+0]=this.data[t*4+3],e.data[t*4+1]=this.data[t*4+2],e.data[t*4+2]=this.data[t*4+1],e.data[t*4+3]=this.data[t*4+0];return e}case 2:{const e=new ImageData(this.width,this.height);for(let t=0;t<this.width*this.height;t++)e.data[t*4+0]=this.data[t*3+0],e.data[t*4+1]=this.data[t*3+1],e.data[t*4+2]=this.data[t*3+2],e.data[t*4+3]=255;return e}case 3:{const e=new ImageData(this.width,this.height);for(let t=0;t<this.width*this.height;t++)e.data[t*4+0]=this.data[t*3+3],e.data[t*4+1]=this.data[t*3+2],e.data[t*4+2]=this.data[t*3+1],e.data[t*4+3]=255;return e}case 4:{const e=new Uint16Array(this.data.buffer),t=new ImageData(this.width,this.height);for(let a=0;a<this.width*this.height;a++){const r=G(e[a]);t.data[a*4+0]=r.r,t.data[a*4+1]=r.g,t.data[a*4+2]=r.b,t.data[a*4+3]=255}return t}case 5:{const e=new ImageData(this.width,this.height);for(let t=0;t<this.width*this.height;t++)e.data[t*4+0]=this.data[t],e.data[t*4+1]=this.data[t],e.data[t*4+2]=this.data[t],e.data[t*4+3]=255;return e}case 12:{const e=new ImageData(this.width,this.height);for(let t=0;t<this.width*this.height;t++)e.data[t*4+0]=this.data[t*4+2],e.data[t*4+1]=this.data[t*4+1],e.data[t*4+2]=this.data[t*4+0],e.data[t*4+3]=this.data[t*4+3];return e}case 13:case 20:return q(this.data,this.width,this.height,!0);case 14:return S(this.data,this.width,this.height,!0);case 15:return S(this.data,this.width,this.height,!1);case 21:{const e=new Uint16Array(this.data.buffer),t=new ImageData(this.width,this.height);for(let a=0;a<this.width*this.height;a++){const r=e[a];t.data[a*4+0]=(r&31744)>>7,t.data[a*4+1]=(r&992)>>2,t.data[a*4+2]=(r&31)<<3,t.data[a*4+3]=r&32768?255:0}return t}default:throw new Error(`Unknown texture format. ${this.format}`)}}}var D=(s=>(s[s.NONE=-1]="NONE",s[s.RGBA8888=0]="RGBA8888",s[s.ABGR8888=1]="ABGR8888",s[s.RGB888=2]="RGB888",s[s.BGR888=3]="BGR888",s[s.RGB565=4]="RGB565",s[s.I8=5]="I8",s[s.IA88=6]="IA88",s[s.P8=7]="P8",s[s.A8=8]="A8",s[s.RGB888_BLUESCREEN=9]="RGB888_BLUESCREEN",s[s.BGR888_BLUESCREEN=10]="BGR888_BLUESCREEN",s[s.ARGB8888=11]="ARGB8888",s[s.BGRA8888=12]="BGRA8888",s[s.DXT1=13]="DXT1",s[s.DXT3=14]="DXT3",s[s.DXT5=15]="DXT5",s[s.BGRX8888=16]="BGRX8888",s[s.BGR565=17]="BGR565",s[s.BGRX5551=18]="BGRX5551",s[s.BGRA4444=19]="BGRA4444",s[s.DXT1_ONEBITALPHA=20]="DXT1_ONEBITALPHA",s[s.BGRA5551=21]="BGRA5551",s[s.UV88=22]="UV88",s[s.UVWQ8888=23]="UVWQ8888",s[s.RGBA16161616F=24]="RGBA16161616F",s[s.RGBA16161616=25]="RGBA16161616",s[s.UVLX8888=26]="UVLX8888",s))(D||{});class b extends z{readHeaderHead(){this.assertMagic("VTF\0");const e=this.readNumber("Uint32"),t=this.readNumber("Uint32");return{version:parseFloat(`${e}.${t}`),headerSize:this.readNumber("Uint32")}}readResource(){return{tag:this.readString(3,"ascii"),flags:this.readNumber("Uint8"),offset:this.readNumber("Uint32")}}readHeader(e){const t=this.readNumber("Uint16"),a=this.readNumber("Uint16"),r=this.readNumber("Uint32"),c=this.readNumber("Uint16"),d=this.readNumber("Int16");this.pointer+=4;const l={r:this.readNumber("Float32"),g:this.readNumber("Float32"),b:this.readNumber("Float32")};this.pointer+=4;const h=this.readNumber("Float32"),n=this.readNumber("Int32"),g=this.readNumber("Uint8"),i=this.readNumber("Int32"),o=this.readNumber("Uint8"),u=this.readNumber("Uint8"),w=r&16384?d==-1?7:6:1,p=e>=7.2?this.readNumber("Uint16"):1;let B=!1,R=[];if(e>=7.3){this.pointer+=3,B=!0;const x=this.readNumber("Uint32");this.pointer+=8,R=this.readArray(this.readResource,x)}return{width:t,height:a,flags:r,frames:c,firstFrame:d,reflectivity:l,bumpmapScale:h,format:n,mipmaps:g,lowresFormat:i,lowresWidth:o,lowresHeight:u,faces:w,slices:p,resourceFormat:B,resources:R}}readTexture(e,t,a){const r=this.readBuffer(U.getTextureSize(e,t,a));return new U(e,t,a,r)}}function y(s,e,t){return[s>>t,e>>t]}class Z{constructor(e){f(this,"version");f(this,"format");f(this,"width");f(this,"height");f(this,"mipmaps");f(this,"frames");f(this,"faces");f(this,"slices",1);f(this,"textures");f(this,"firstFrame");f(this,"flags");f(this,"reflectivity");f(this,"bumpmapScale");f(this,"lowresFormat");f(this,"lowresWidth");f(this,"lowresHeight");f(this,"lowresTexture",null);const t=new b(e),a=t.readHeaderHead();this.version=a.version;const r=t.readHeader(this.version);this.width=r.width,this.height=r.height,this.flags=r.flags,this.frames=r.frames,this.firstFrame=r.firstFrame,this.reflectivity=r.reflectivity,this.bumpmapScale=r.bumpmapScale,this.format=r.format,this.mipmaps=r.mipmaps,this.lowresFormat=r.lowresFormat,this.lowresWidth=r.lowresWidth,this.lowresHeight=r.lowresHeight,this.faces=r.faces,this.slices=r.slices;const c=()=>{let l=[];for(let h=this.mipmaps-1;h>=0;h--){l[h]=[];for(let n=0;n<this.frames;n++){l[h][n]=[];for(let g=0;g<this.faces;g++){l[h][n][g]=[];for(let i=0;i<this.slices;i++){const[o,u]=this.getSize(h),w=t.readTexture(this.format,o,u);l[h][n][g][i]=w}}}}return l},d=()=>this.lowresWidth==0||this.lowresHeight==0||this.lowresFormat==-1?null:(this.lowresFormat!=13&&console.warn(`VTF lowres texture format ${D[this.lowresFormat]} is not ${D[13]}`),t.readTexture(this.lowresFormat,this.lowresWidth,this.lowresHeight));if(r.resourceFormat){const l=r.resources.find(n=>n.tag=="0\0\0");if(!l)throw new Error("VTF resource format has no high resolution texture.");t.pointer=l.offset,this.textures=c();const h=r.resources.find(n=>n.tag=="\0\0");h&&(t.pointer=h.offset,this.lowresTexture=d())}else t.pointer=a.headerSize,this.lowresTexture=d(),this.textures=c()}getSize(e){return y(this.width,this.height,e)}getTexture(e=0,t=0,a=0,r=0){return this.textures[e][t][a][r]}static async getThumbnail(e,t,a){var h;const r=new b;r.loadData(await e.slice(0,16).arrayBuffer());const c=r.readHeaderHead();r.loadData(await e.slice(0,c.headerSize).arrayBuffer(),r.pointer);const d=r.readHeader(c.version);let l=d.resourceFormat?((h=d.resources.find(n=>n.tag=="0\0\0"))==null?void 0:h.offset)??-1:c.headerSize+U.getTextureSize(d.lowresFormat,d.lowresWidth,d.lowresHeight);if(l==-1)throw new Error("VTF no highres texture.");for(let n=d.mipmaps-1;n>=0;n--)for(let g=0;g<d.frames;g++)for(let i=0;i<d.faces;i++)for(let o=0;o<d.slices;o++){const[u,w]=y(d.width,d.height,n),p=U.getTextureSize(d.format,u,w);if(u<t||w<a){l+=p;continue}return r.loadData(await e.slice(l,l+p).arrayBuffer()),r.readTexture(d.format,u,w)}return null}getTHREEMipmaps(e=0){return v.initArray(this.mipmaps,t=>{const a=this.getSize(t);return{data:new Uint8Array(this.getTexture(t,e).data),width:a[0],height:a[1]}}).filter(t=>t.width>0&&t.height>0)}getTHREETexture(){let e;if([13,20,14,15].includes(this.format))e=new M(this.getTHREEMipmaps(),this.width,this.height,N[this.format]);else{if(N[this.format]===void 0)throw new Error("Cannot convert texture format.");e=new L(void 0,this.width,this.height,N[this.format]),e.mipmaps=this.getTHREEMipmaps()}return e.wrapS=E,e.wrapT=E,e.generateMipmaps=!1,e.magFilter=W,e.minFilter=$,e.needsUpdate=!0,e}}const N={13:O,20:P,14:j,15:Q,0:H,12:H};export{Z as V};
