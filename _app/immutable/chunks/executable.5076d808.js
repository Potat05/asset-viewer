var H=Object.defineProperty;var R=(a,e,n)=>e in a?H(a,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[e]=n;var y=(a,e,n)=>(R(a,typeof e!="symbol"?e+"":e,n),n);import{f as V,D as A}from"./2.2ee3d51f.js";import{I as g}from"./ImageUtils.e16e1161.js";import{B as I}from"./BlobReader.86937414.js";var D;(a=>{function e(n){return n!=null}a.isNotNull=e})(D||(D={}));class T extends I{async readDOSHeader(){return await this.load(64),this.assertMagic(23117,"Uint16"),{bytesOnLastPageOfFile:this.readNumber("Uint16"),pagesInFile:this.readNumber("Uint16"),relocations:this.readNumber("Uint16"),sizeOfHeaderParagraphs:this.readNumber("Uint16"),minExtraParagraphsNeeded:this.readNumber("Uint16"),maxExtraParagraphsNeeded:this.readNumber("Uint16"),initialRelSSValue:this.readNumber("Uint16"),initialSPValue:this.readNumber("Uint16"),checksum:this.readNumber("Uint16"),initialIPValue:this.readNumber("Uint16"),initialRelCSValue:this.readNumber("Uint16"),fileAddressOfRelocationTable:this.readNumber("Uint16"),overlayNumber:this.readNumber("Uint16"),reserved1:this.readBuffer(8),OEMIdentifier:this.readNumber("Uint16"),OEMInformation:this.readNumber("Uint16"),reserved2:this.readBuffer(20),fileAddressOfNewExeHeader:this.readNumber("Uint32")}}async readFileHeader(){return await this.load(24),this.assertMagic(17744,"Uint32"),{machine:this.readNumber("Uint16"),sectionsCount:this.readNumber("Uint16"),timeDateStamp:this.readNumber("Uint32"),ptrToSymbolTable:this.readNumber("Uint32"),numSymbols:this.readNumber("Uint32"),sizeOfOptionalHeader:this.readNumber("Uint16"),characteristics:this.readNumber("Uint16")}}readOffsetSize(){return{offset:this.readNumber("Uint32"),size:this.readNumber("Uint32")}}readNT32Header(){return{type:"NT32",linkerVerMajor:this.readNumber("Uint8"),linkerVerMinor:this.readNumber("Uint8"),sizeOfCode:this.readNumber("Uint32"),sizeOfInitializedData:this.readNumber("Uint32"),sizeOfUninitializedData:this.readNumber("Uint32"),entryPoint:this.readNumber("Uint32"),baseOfCode:this.readNumber("Uint32"),baseOfData:this.readNumber("Uint32"),imageBase:this.readNumber("Uint32"),sectionAlignment:this.readNumber("Uint32"),fileAlignment:this.readNumber("Uint32"),osVerMajor:this.readNumber("Uint16"),osVerMinor:this.readNumber("Uint16"),imageVerMajor:this.readNumber("Uint16"),imageVerMinor:this.readNumber("Uint16"),subSystemVerMajor:this.readNumber("Uint16"),subSystemVerMinor:this.readNumber("Uint16"),win32VersionValue:this.readNumber("Uint32"),sizeOfImage:this.readNumber("Uint32"),sizeOfHeaders:this.readNumber("Uint32"),_checksum:this.readNumber("Uint32"),subSystem:this.readNumber("Uint16"),dllCharacteristics:this.readNumber("Uint16"),sizeOfStackReserve:this.readNumber("Uint32"),sizeOfStackCommit:this.readNumber("Uint32"),sizeOfHeapReserve:this.readNumber("Uint32"),sizeOfHeapCommit:this.readNumber("Uint32"),loaderFlags:this.readNumber("Uint32"),numberOfRVAsAndSizes:this.readNumber("Uint32"),exportDirectory:this.readOffsetSize(),importDirectory:this.readOffsetSize(),resourceDirectory:this.readOffsetSize(),exceptionDirectory:this.readOffsetSize(),securityDirectory:this.readOffsetSize(),baseRelocationTable:this.readOffsetSize(),debugDirectory:this.readOffsetSize(),architectureSpecificData:this.readOffsetSize(),RVAOfGlobalPTR:this.readOffsetSize(),TLSDirectory:this.readOffsetSize(),loadConfigurationDirectory:this.readOffsetSize(),boundImportDirectory:this.readOffsetSize(),importAddressTable:this.readOffsetSize(),delayLoadImportDescriptors:this.readOffsetSize(),netHeader:this.readOffsetSize()}}readNT64Header(){return{type:"NT64",linkerVerMajor:this.readNumber("Uint8"),linkerVerMinor:this.readNumber("Uint8"),sizeOfCode:this.readNumber("Uint32"),sizeOfInitializedData:this.readNumber("Uint32"),sizeOfUninitializedData:this.readNumber("Uint32"),entryPoint:this.readNumber("Uint32"),baseOfCode:this.readNumber("Uint32"),imageBase:this.readBigNumber("BigUint64"),sectionAlignment:this.readNumber("Uint32"),fileAlignment:this.readNumber("Uint32"),osVerMajor:this.readNumber("Uint16"),osVerMinor:this.readNumber("Uint16"),imageVerMajor:this.readNumber("Uint16"),imageVerMinor:this.readNumber("Uint16"),subSystemVerMajor:this.readNumber("Uint16"),subSystemVerMinor:this.readNumber("Uint16"),win32VersionValue:this.readNumber("Uint32"),sizeOfImage:this.readNumber("Uint32"),sizeOfHeaders:this.readNumber("Uint32"),_checksum:this.readNumber("Uint32"),subSystem:this.readNumber("Uint16"),dllCharacteristics:this.readNumber("Uint16"),sizeOfStackReserve:this.readBigNumber("BigUint64"),sizeOfStackCommit:this.readBigNumber("BigUint64"),sizeOfHeapReserve:this.readBigNumber("BigUint64"),sizeOfHeapCommit:this.readBigNumber("BigUint64"),loaderFlags:this.readNumber("Uint32"),numberOfRVAsAndSizes:this.readNumber("Uint32"),exportDirectory:this.readOffsetSize(),importDirectory:this.readOffsetSize(),resourceDirectory:this.readOffsetSize(),exceptionDirectory:this.readOffsetSize(),securityDirectory:this.readOffsetSize(),baseRelocationTable:this.readOffsetSize(),debugDirectory:this.readOffsetSize(),architectureSpecificData:this.readOffsetSize(),RVAOfGlobalPTR:this.readOffsetSize(),TLSDirectory:this.readOffsetSize(),loadConfigurationDirectory:this.readOffsetSize(),boundImportDirectory:this.readOffsetSize(),importAddressTable:this.readOffsetSize(),delayLoadImportDescriptors:this.readOffsetSize(),netHeader:this.readOffsetSize()}}readOptionalHeader(){switch(this.readNumber("Uint16")){case 267:return this.readNT32Header();case 523:return this.readNT64Header();default:throw new Error("Unknown optional header type.")}}readSectionHeaders(e){return this.readArray(()=>({name:this.readString(8),physicalAddressOrVirtualSize:this.readNumber("Uint32"),virtualAddress:this.readNumber("Uint32"),sizeOfRawData:this.readNumber("Uint32"),pointerToRawData:this.readNumber("Uint32"),pointerToRelocations:this.readNumber("Uint32"),pointerToLinenumbers:this.readNumber("Uint32"),numberOfRelocations:this.readNumber("Uint16"),numberOfLinenumbers:this.readNumber("Uint16"),characteristics:this.readNumber("Uint32")}),e)}readResources(e=this.pointer,n){n!==void 0&&(this.pointer=e+n);const d=this.readNumber("Uint32"),t=this.readNumber("Uint32"),i=this.readNumber("Uint16"),r=this.readNumber("Uint16"),o=this.readNumber("Uint16"),m=this.readNumber("Uint16"),c=this.readArray(()=>({type:this.readNumber("Uint32"),offset:this.readNumber("Uint32")}),o+m).map(N=>{let f=N.type;const O=!!(f&2147483648);f&=2147483647;let h=N.offset;const b=!!(h&2147483648);return h&=2147483647,b?{isStr:O,type:f,isDir:!0,dir:this.readResources(e,h)}:{isStr:O,type:f,isDir:!1,offset:h}});return{characteristics:d,timeDateStamp:t,majorVersion:i,minorVersion:r,numberOfNamedEntries:o,numberOfIdEntries:m,entries:c}}}var U;(a=>{async function e(t){const i=await t.readDOSHeader();t.blobPointer=i.fileAddressOfNewExeHeader;const r=await t.readFileHeader();await t.load(r.sizeOfOptionalHeader);const o=t.readOptionalHeader();await t.load(o.sizeOfHeaders);const m=t.readSectionHeaders(r.sectionsCount);return[i,r,o,m]}a.getHeaders=e;function n(t,i,r=0){for(const o of t)if(o.name==i||o.name.replaceAll("\0","")==i){if(r<=0)return o;r--}return null}a.getSectionHeader=n;class d{constructor(i){y(this,"sections");this.sections=i}toVirtual(i){for(const r of this.sections)if(i>=r.pointerToRawData&&i<r.pointerToRawData+r.sizeOfRawData)return i-r.pointerToRawData+r.virtualAddress;return-1}toRaw(i){for(const r of this.sections)if(i>=r.virtualAddress&&i<r.virtualAddress+r.physicalAddressOrVirtualSize)return i-r.virtualAddress+r.pointerToRawData;return-1}}a.VirtualMemeorySpace=d})(U||(U={}));async function v(a){const e=new A(a);if(e.magic([137,80,78,71,13,10,26,10]))return URL.createObjectURL(new Blob([e.buffer]));{e.pointer=0;const n=e.readNumber("Uint32"),d=new DataView(new ArrayBuffer(e.length+14));d.setUint8(0,66),d.setUint8(1,77),d.setUint32(2,d.byteLength,!0),d.setUint32(10,14+n,!0),new Uint8Array(d.buffer).set(new Uint8Array(e.buffer),14);const t=await g.imgBuffer2imgData(d.buffer),i=new ImageData(t.width,t.height>>1);return i.data.set(t.data.slice(t.width*(t.height>>1)*4)),g.imgData2url(i)}}async function B(a){const e=new T(a),[n,d,t,i]=await U.getHeaders(e),r=new U.VirtualMemeorySpace(i);if(t.resourceDirectory.offset==0||t.resourceDirectory.size==0)return;await e.load(t.resourceDirectory.size,r.toRaw(t.resourceDirectory.offset));const o=e.readResources();function m(s){if(!s||!s.isDir)throw new Error("readOffsetSize entry is not dir.");const u=s.dir.entries[0];if(!u||u.isDir)throw new Error("readOffsetSize data entry is invalid.");return e.pointer=u.offset,{id:s.type,offset:e.readNumber("Uint32"),size:e.readNumber("Uint32"),codePage:e.readNumber("Uint32"),reserved:e.readNumber("Uint32")}}const c=o.entries.find(s=>s.type==3);if(!c||!c.isDir)return;const N=c.dir.entries.map(m),f=o.entries.find(s=>s.type==14);if(!f||!f.isDir)return;const h=(await Promise.all(f.dir.entries.map(m).map(async s=>{await e.load(s.size,r.toRaw(s.offset));const u=e.readBuffer(2),w=e.readNumber("Uint16"),p=e.readNumber("Uint16");function z(l){return l==0?255:l}let S=[];for(let l=0;l<p;l++)S.push({width:z(e.readNumber("Uint8")),height:z(e.readNumber("Uint8")),colorCount:e.readNumber("Uint8"),reserved:e.readBuffer(1),planes:e.readNumber("Uint16"),bitCount:e.readNumber("Uint16"),bytesInRes:e.readNumber("Uint32"),id:e.readNumber("Uint16")});return{reserved:u,type:w,count:p,entries:S}})))[0].entries.reduce((s,u)=>s===void 0||u.width>s.width&&u.height>s.height?u:s),b=N.find(s=>s.id==h.id);if(!b)throw new Error("Catastrophic error, Icon ID was not found.");return await e.load(b.size,r.toRaw(b.offset)),await v(e.readBuffer(e.dataLeft))}const P={namespace:"executable",priority:1,getIcon:async a=>{if(a.type==V.File){const e=await B(await a.blob());return e||"/asset-viewer/bootstrap-icons/filetype-exe.svg"}return null}};export{P as default};
